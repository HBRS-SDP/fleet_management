version: "2"

services:
  mongo:
    container_name: mongo
    image: mongo:4.0-xenial
    volumes:
      - /data/db:/data/db
    ports:
      - "27017:27017"
    network_mode: "host"

  roscore:
    container_name: roscore
    image: ros:kinetic-ros-core
    command: ["roscore"]
    network_mode: "host"
    ports:
      - "11311:11311"

  osm:
    container_name: osm-brsu
    image: git.ropod.org:4567/ropod/wm/docker-overpass-api:brsu
    ports:
      - "8000:80"

  amk:
    container_name: osm-amk
    image: git.ropod.org:4567/ropod/wm/docker-overpass-api:amk
    ports:
      - "8000:80"

  elevator:
    image: git.ropod.org:4567/ropod/infrastructure/ropod-elevator:latest
    restart: on-failure
    container_name: ropod-elevator
    volumes:
      - /var/logs/ropod-elevator:/opt/ropod/ropod-elevator/logger
      - /tmp:/tmp/
    network_mode: "host"
    working_dir: /opt/ropod/ropod-elevator/bin/
    command: ["./ropod_elevator",  "/opt/ropod/ropod-elevator/examples/config/config_ropod_elevator_sim.json"]
    depends_on:
      - elevator_simulator

  elevator_simulator:
    image: git.ropod.org:4567/ropod/infrastructure/ropod-elevator:simulator
    container_name: simulated-elevator
    network_mode: "host"
    working_dir: /workspace/bin/
    volumes:
      - /tmp/:/tmp/
    command: ["./elevator_simulator"]

  fms:
    build: .
    container_name: fms
    # restart: always
    tty: true
    stdin_open: true
    image: ropod-fms
    network_mode: "host"
    volumes:
      - /var/log/ropod/fms:/var/log/ropod/fms
    depends_on:
      - mongo
      - osm
      - roscore
    command: ["python3", "ccu.py"]

  task_test:
    image: ropod-fms
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/
    command: ["python3", "task_request_test.py"]
    container_name: task-request-test
    network_mode: "host"
    tty: true
    stdin_open: true
    depends_on:
      - mongo
      - fms
      - osm
      - robot_1

  query_interface_test:
    image: ropod-fms
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/
    command: ["python3", "query_interface_test.py"]
    container_name: query-interface-test
    network_mode: "host"
    tty: true
    stdin_open: true
    depends_on:
      - mongo
      - fms
      - robot_1

  elevator_test:
    image: ropod-fms
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/
    command: ["python3", "test_elevator_request.py"]
    container_name: elevator-test
    network_mode: "host"
    tty: true
    stdin_open: true
    depends_on:
      - mongo
      - fms
      - elevator
      - elevator_simulator

  path_planner_test:
    image: ropod-fms
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/integration/osm/
    command: ["python3", "path_planner_test.py"]
    container_name: path-planner-test
    network_mode: "host"
    depends_on:
      - osm

  robot_1:
    image: ropod-fms
    container_name: "ropod_001"
    network_mode: "host"
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/proxies
    command: ["python3", "robot.py","ropod_001"]
    stdin_open: true
    tty: true
    volumes:
      - /var/log/ropod/fms:/var/log/ropod/fms

  task_relay:
    image: ropod-fms
    container_name: "task_relay"
    network_mode: "host"
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/integration/tasks/
    command: ["python3", "task_relay.py"]
    stdin_open: true
    tty: true

  task_requester:
    image: ropod-fms
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/integration/tasks
    command: ["python3", "task_requester.py"]
    container_name: "task_requester"
    network_mode: "host"
    tty: true
    stdin_open: true
    depends_on:
      - mongo
      - fms
      - osm
      - robot_1

  com_mediator:
    environment:
      - ROPOD_ID=ropod_001
    image: git.ropod.org:4567/ropod/communication/ropod_com_mediator:latest
    container_name: "com_mediator"
    network_mode: "host"
    working_dir: /ropod_com_mediator_ws
    command: ["roslaunch", "ropod_com_mediator","com_mediator.launch", "debug_mode:=true"]

  com_mediator_test:
    image: ropod-fms
    working_dir: /opt/ropod/fms/fleet-management/fleet_management/test/integration/tasks
    command: ["python3", "com_mediator_test.py"]
    container_name: com_mediator_test
    network_mode: "host"
    tty: true
    stdin_open: true
