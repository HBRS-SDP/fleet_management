image: docker:stable

variables:
  #DOCKER_HOST: tcp://docker:2375/
  #DOCKER_DRIVER: overlay2
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

services:
  - name: docker:dind

stages:
  - build
  - unit tests
  - integration tests
  - release

before_script:
  - docker info
  - apk add --no-cache py-pip 
  - pip install -qqq docker-compose==1.23.2
  - docker-compose -v
  - apk add --no-cache git 
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN git.ropod.org:4567
  - echo $CONTAINER_TEST_IMAGE

build:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

pylint:
  before_script:
    - pip install anybadge
  image: $CONTAINER_TEST_IMAGE
  stage: build
  script:
    - python3 .gitlab/lint.py
  allow_failure: true
  artifacts:
    when: always
    paths:
      - pylint.svg
    expire_in: 30 days

coverage:
  before_script:
    - echo "Coverage"
  image: $CONTAINER_TEST_IMAGE
  stage: build
  script:
    - pytest --collect-only --cov=fleet_management fleet_management/test/fms
  allow_failure: true

docs:
  stage: build
  image: $CONTAINER_TEST_IMAGE
  before_script:
    - pip install sphinx sphinx_rtd_theme
  script:
    - cd docs
    - make html
  allow_failure: true

resource management:
  before_script:
    - echo "Unit tests"
  image: $CONTAINER_TEST_IMAGE
  stage: unit tests
  script:
    - pytest fleet_management/test/fms/resources/fleet
    - pytest fleet_management/test/fms/resources/infrastructure

task request:
  stage: integration tests
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up --exit-code-from task_test task_test fms robot_1
    - docker-compose logs
  after_script:
    - echo "Stoping all containers"
    - docker stop $(docker ps -aq)

task request case 1:
  stage: integration tests
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up -d fms robot_1
    - docker-compose -f .gitlab/docker-compose.yml run --service-ports --use-aliases -w "/opt/ropod/fms/fleet-management/fleet_management/test/integration/tasks" task_test python3 task_request_test.py --case 1
  after_script:
    - echo "Stopping all containers"
    - docker stop $(docker ps -aq)

task request case 5:
  stage: integration tests
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up -d fms robot_1
    - docker-compose -f .gitlab/docker-compose.yml run --service-ports --use-aliases -w "/opt/ropod/fms/fleet-management/fleet_management/test/integration/tasks" task_test python3 task_request_test.py --case 5
  after_script:
    - echo "Stopping all containers"
    - docker stop $(docker ps -aq)

com_mediator test:
  stage: integration tests
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up --exit-code-from com_mediator_test com_mediator_test robot_1 task_relay task_requester fms com_mediator
    - docker-compose logs
  after_script:
    - echo "Stoping all containers"
    - docker stop $(docker ps -aq)

elevator monitor:
  stage: integration tests
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up --exit-code-from elevator_monitor_test elevator_monitor_test elevator
    - docker-compose logs
  after_script:
    - echo "Stoping all containers"
    - docker stop $(docker ps -aq)

elevator workflow:
  stage: integration tests
  retry: 2
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up --exit-code-from elevator_test elevator_test fms elevator
    - docker-compose logs
  after_script:
    - echo "Stoping all containers"
    - docker stop $(docker ps -aq)

path planner requests:
  stage: integration tests
  script:
    - docker-compose -f .gitlab/docker-compose.yml up path_planner_test
    - docker-compose logs
  after_script:
    - echo "Stoping all containers"
    - docker stop $(docker ps -aq)
  when: always

query interface:
  stage: integration tests
  script:
    - docker-compose up -d roscore
    - docker-compose -f .gitlab/docker-compose.yml up --exit-code-from query_interface_test query_interface_test
    - docker-compose logs
  after_script:
    - echo "Stoping all containers"
    - docker stop $(docker ps -aq)

stable image:
  variables:
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:stable
  stage: release
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
  - docker push $CONTAINER_RELEASE_IMAGE
  only:
  - master
  - tags

latest image:
  stage: release
  variables:
    CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  script:
  - docker pull $CONTAINER_TEST_IMAGE
  - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
  - docker push $CONTAINER_RELEASE_IMAGE
  only:
  - develop
